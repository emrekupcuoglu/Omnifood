/* !rem and em do NOT depend on html font size in media queries
!Insetead we assume that 1rem = 1em = 16px */
/* !There might be bugs in some browsers using rem with media queries
!So we willl use em (this problem might be fixed)  */

/* ****************************** */
/* BELOW 1344px (Smaller desktops)*/
/* ****************************** */

@media (max-width: 84em) {
  .hero {
    /* This rem has nothing to with media queries it still works with the html font size so here it is still 1200px */
    max-width: 120rem;
  }
  .heading-primary {
    font-size: 4.4rem;
  }

  .gallery {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* ****************************** */
/* BELOW 1200px (Landscape tablets)*/
/* ****************************** */

@media (max-width: 75em) {
  /* Content is getting huge on the screen. We need to scale it down
   Because we are using rems as units
   we can scale the rem and all the  content using rems will scale down except elements that use percentages like the .gallery*/
  html {
    /* we want the rem to be equal to 9px instead of 10
    9px / 16px=56.25% */
    font-size: 56.25%;
  }

  .grid {
    column-gap: 4.8rem;
    row-gap: 6.4rem;
  }

  /* We are doing the calculation as if
  1 rem was 10px NOT 9px because of
  consistency with the other code */
  .heading-secondary {
    font-size: 3.6rem;
  }

  .heading-tertiary {
    font-size: 2.4rem;
  }

  .header {
    padding: 0 3.2rem;
  }

  .main-nav-list {
    gap: 3.2rem;
  }

  .hero {
    gap: 4.8rem;
  }

  .testimonials-container {
    padding: 9.6rem 3.2rem;
  }
}

/* ****************************** */
/* BELOW 944px (Tablets)*/
/* ****************************** */

@media (max-width: 59em) {
  html {
    font-size: 50%;
  }
  .hero {
    grid-template-columns: 1fr;
    text-align: center;
    padding: 0 8rem;
    gap: 6.4rem;
  }

  .hero-img {
    width: 60%;
  }

  .delivered-meals {
    justify-content: center;
    margin-top: 3.2rem;
  }

  .logos img {
    height: 2.4rem;
  }

  .step-num {
    font-size: 7.4rem;
  }

  .meal-content {
    padding: 3.2rem;
    padding-top: 2.4rem;
  }

  .section-testimonials {
    grid-template-columns: 1fr;
    padding: 3.2rem;
  }

  .gallery {
    grid-template-columns: repeat(6, 1fr);
  }

  .cta {
    grid-template-columns: 1fr 1fr;
  }

  .cta-form {
    grid-template-columns: 1fr;
    gap: 4.8rem;
  }

  .btn-mobile-nav {
    display: block;
    z-index: 9999;
  }

  .main-nav {
    position: absolute;
    top: 0;
    left: 0;
    background-color: rgba(255, 255, 255, 0.97);
    width: 100%;
    height: 100vh;
    translate: 200%;

    display: flex;
    align-items: center;
    justify-content: center;

    transition: opacity 500ms ease-in, translate 500ms ease-in;

    /* Hide the navigation initially */
    /* When we use display none we can not use animations (and transition) with it
    and that is annoying */
    /* display: none; */

    /* To hide it properly without display none we need to do it in steps */

    /* 1. Hide it visually */
    opacity: 0;

    /* 2. Make it unaccesible to mouse and keyboard 
    Because unlike display:none we only lowered the opacity
    so the elements are still on the page*/
    pointer-events: none;

    /* 3. Hide it from screen readers */
    visibility: hidden;
  }

  .nav-open .main-nav {
    opacity: 1;
    pointer-events: auto;
    visibility: visible;
    translate: 0;
  }

  .nav-open .icon-mobile-nav[name="close-outline"] {
    display: block;
  }

  .nav-open .icon-mobile-nav[name="menu-outline"] {
    display: none;
  }

  .main-nav-list {
    flex-direction: column;
    gap: 4.8rem;
  }

  .main-nav-link:link,
  .main-nav-link:visited {
    font-size: 3rem;
  }
}

/* ****************************** */
/* BELOW 704px (Smaller tablets)*/
/* ****************************** */

@media (max-width: 44rem) {
  .grid--3-cols,
  .grid--4-cols {
    grid-template-columns: repeat(2, 1fr);
  }

  .logos img {
    height: 2rem;
  }

  .diets {
    grid-column: 1/-1;
    justify-self: center;
  }

  .heading-secondary {
    margin-bottom: 4.8rem;
  }

  .pricing-plan {
    width: 100%;
  }

  /* We do this to center the items in the grid */

  .grid--footer {
    grid-template-columns: repeat(6, 1fr);
  }

  .nav-col {
    grid-row: 1;
    grid-column: span 2;
    margin-bottom: 3.2rem;
  }

  .logo-col,
  .address-col {
    grid-row: 2;
    grid-column: span 3;
  }
}

/* ****************************** */
/* BELOW 544px (Phones)*/
/* ****************************** */

@media (max-width: 34em) {
  .grid {
    row-gap: 4.8rem;
  }
  .grid--2-cols,
  .grid--3-cols,
  .grid--4-cols {
    grid-template-columns: 1fr;
  }

  .btn,
  .btn:link,
  .btn:visited {
    padding: 2.4rem 1.6rem;
  }

  .section-hero {
    padding: 2.4rem 0 6.4rem 0;
  }

  .hero {
    padding: 0 3.2rem;
  }

  .hero-img {
    width: 80%;
  }

  .logos img {
    height: 1.2rem;
  }

  .step-img-box:nth-child(2) {
    grid-row: 1;
  }
  .step-img-box:nth-child(6) {
    grid-row: 5;
  }

  /* We want the image to be closer to the step-number
  Because we can not select grid row-gaps selectively we need another way of doing that.
  We use translate for that */

  .step-img-box {
    translate: 0 2.4rem;
  }

  .testimonials {
    grid-template-columns: 1fr;
  }

  .gallery {
    grid-template-columns: 1fr 1fr 1fr 1fr;
    gap: 0.8rem;
  }
  .cta {
    grid-template-columns: 1fr;
  }

  .cta-text-box {
    padding: 3.2rem;
  }

  .cta-img-box {
    /* Because this div doesn't have any content and uses a background image as an image instead of an <img> element css doesn't give it any height
    The only reason that it had a heigth before because it was side by side with another element(this and the other element is insdei a grid) and it automaticly get the heigth of that element because of how grid works.
    But now we need to give it a heigth manually*/
    height: 36rem;

    grid-row: 1;
  }
}
